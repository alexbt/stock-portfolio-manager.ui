SET DATABASE UNIQUE NAME HSQLDB459F73830B
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 500 MILLIS
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 8
SET FILES LOB SCALE 32
SET FILES DEFRAG 20
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE MEMORY TABLE PUBLIC.TRANSACTION(ID INTEGER NOT NULL,COMMISSION DECIMAL(38,8) NOT NULL,DATE TIMESTAMP NOT NULL,PRICE DECIMAL(38,8) NOT NULL,QUANTITY DECIMAL(38,8) NOT NULL,SYMBOL_ID INTEGER NOT NULL,TYPE VARCHAR(255) NOT NULL,CONSTRAINT PK_TRANSACTION_ID PRIMARY KEY(ID),CONSTRAINT CK_TRANSACTION_PRICE CHECK(PUBLIC.TRANSACTION.PRICE>=0),CONSTRAINT CK_TRANSACTION_COMMISSION CHECK(PUBLIC.TRANSACTION.COMMISSION>=0),CONSTRAINT CK_TRANSACTION_QUANTITY CHECK(PUBLIC.TRANSACTION.QUANTITY>=0))
CREATE MEMORY TABLE PUBLIC.HISTORICALPRICE(ID INTEGER NOT NULL,CUSTOMPRICE DECIMAL(38,8) NOT NULL,PRICE DECIMAL(38,8) NOT NULL,YEAR INTEGER NOT NULL,CONSTRAINT PK_HISTORICALPRICE_ID PRIMARY KEY(ID),CONSTRAINT CK_HISTORICALPRICE_YEAR CHECK(PUBLIC.HISTORICALPRICE.YEAR>=1800),CONSTRAINT CK_HISTORICALPRICE_PRICE CHECK(PUBLIC.HISTORICALPRICE.PRICE>=0),CONSTRAINT CK_HISTORICALPRICE_CUSTOMPRICE CHECK(PUBLIC.HISTORICALPRICE.CUSTOMPRICE>=0))
CREATE MEMORY TABLE PUBLIC.LABEL(ID INTEGER NOT NULL,NAME VARCHAR(255) NOT NULL,CONSTRAINT PK_LABEL_ID PRIMARY KEY(ID),CONSTRAINT UN_LABEL_NAME UNIQUE(NAME),CONSTRAINT CK_LABEL_NAME CHECK(TRIM(LEADING ' ' FROM PUBLIC.LABEL.NAME)!=''))
CREATE MEMORY TABLE PUBLIC.SYMBOL_PRICES(SYMBOLID INTEGER NOT NULL,PRICEID INTEGER NOT NULL,CONSTRAINT PK_SYMBOLPRICES_IDS PRIMARY KEY(SYMBOLID,PRICEID),CONSTRAINT UN_SYMBOLPRICES_PRICEID UNIQUE(PRICEID),CONSTRAINT FK_SYMBOL_HISTORICALPRICE FOREIGN KEY(PRICEID) REFERENCES PUBLIC.HISTORICALPRICE(ID))
CREATE MEMORY TABLE PUBLIC.SYMBOL(ID INTEGER NOT NULL,ISCUSTOMPRICEFIRST BIT(1) NOT NULL,NAME VARCHAR(255),TICKER VARCHAR(255) NOT NULL,SECTOR VARCHAR(255) DEFAULT 'UNKNOWN' NOT NULL,CURRENCY VARCHAR(255) NOT NULL,CONSTRAINT PK_SYMBOL_ID PRIMARY KEY(ID),CONSTRAINT UN_SYMBOL_TICKER UNIQUE(TICKER),CONSTRAINT CK_SYMBOL_TICKER CHECK(TRIM(LEADING ' ' FROM PUBLIC.SYMBOL.TICKER)!=''))
CREATE MEMORY TABLE PUBLIC.TRANSACTION_LABEL(TRANSACTIONID INTEGER NOT NULL,LABELID INTEGER NOT NULL,CONSTRAINT PK_TRANSACTIONLABEL_IDS PRIMARY KEY(TRANSACTIONID,LABELID),CONSTRAINT FK_TRANSACTION_LABEL FOREIGN KEY(LABELID) REFERENCES PUBLIC.LABEL(ID))
CREATE MEMORY TABLE PUBLIC.VERSION(ID INTEGER NOT NULL,DATABASEVERSION INTEGER NOT NULL,CONSTRAINT PK_VERSION_ID PRIMARY KEY(ID),CONSTRAINT CK_VERSION_DATABASEVERSION CHECK(PUBLIC.VERSION.DATABASEVERSION>=0),CONSTRAINT UN_VERSION_DATABASEVERSION UNIQUE(DATABASEVERSION))
ALTER TABLE PUBLIC.TRANSACTION ADD CONSTRAINT FK_TRANSACTION_SYMBOL FOREIGN KEY(SYMBOL_ID) REFERENCES PUBLIC.SYMBOL(ID)
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO TRANSACTION VALUES(60,3.00000000,'2014-04-26 17:03:02.846000',1.00000000,2.00000000,40,'BUY')
INSERT INTO TRANSACTION VALUES(80,2.00000000,'2014-04-03 23:13:26.956000',1.00000000,2.00000000,20,'BUY')
INSERT INTO HISTORICALPRICE VALUES(10,0.00000000,0.00000000,2014)
INSERT INTO HISTORICALPRICE VALUES(30,0.00000000,0.00000000,2014)
INSERT INTO HISTORICALPRICE VALUES(50,0.00000000,0.00000000,2014)
INSERT INTO LABEL VALUES(70,'label')
INSERT INTO LABEL VALUES(71,'d')
INSERT INTO SYMBOL_PRICES VALUES(1,10)
INSERT INTO SYMBOL_PRICES VALUES(20,30)
INSERT INTO SYMBOL_PRICES VALUES(40,50)
INSERT INTO SYMBOL VALUES(-1,'0','','Error','UNKNOWN','ERROR')
INSERT INTO SYMBOL VALUES(1,'0','23','v23','UNKNOWN','CAD')
INSERT INTO SYMBOL VALUES(20,'0','asd','v23b','UNKNOWN','USD')
INSERT INTO SYMBOL VALUES(40,'0','','v023','CONGLOMERATES','CAD')
INSERT INTO TRANSACTION_LABEL VALUES(60,70)
INSERT INTO TRANSACTION_LABEL VALUES(60,71)
INSERT INTO VERSION VALUES(1,24)
